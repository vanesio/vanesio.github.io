<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[过客匆匆]]></title>
  <link href="http://vanesio.github.io/atom.xml" rel="self"/>
  <link href="http://vanesio.github.io/"/>
  <updated>2013-05-22T23:42:57+08:00</updated>
  <id>http://vanesio.github.io/</id>
  <author>
    <name><![CDATA[timpeng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[第二篇]]></title>
    <link href="http://vanesio.github.io/blog/2013/05/05/post-title-2/"/>
    <updated>2013-05-05T11:11:00+08:00</updated>
    <id>http://vanesio.github.io/blog/2013/05/05/post-title-2</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Github上搭建Octopress]]></title>
    <link href="http://vanesio.github.io/blog/2013/05/05/post-title/"/>
    <updated>2013-05-05T09:19:00+08:00</updated>
    <id>http://vanesio.github.io/blog/2013/05/05/post-title</id>
    <content type="html"><![CDATA[<p>前些天在网上看到<a href="http://octopress.org/">Octopress</a>这个静态博客，它的一些特色我挺喜欢，便花了些时间在Github上搭建了个Octpress博客。搭建过程还算顺利，在这就把搭建和使用的流程以及遇到的问题及其解决方法做个简单记录，做为LZ的第一篇博文。<strong>注意：本文介绍的内容是针对Mac系统</strong></p>

<h2>0. Outline</h2>

<ul>
<li>“主角”介绍</li>
<li>环境准备</li>
<li>部署Octopress到Github</li>
<li>Octopress的基本操作</li>
<li>Octopress进阶配置</li>
</ul>


<!--more-->


<h2>1. “主角”介绍</h2>

<p>首先上场的是——Octopress，Octopress是一款用Ruby语言开发的Blog框架，它的的特点LZ总结为两个字——“优雅”，当然这是废话，下面是正统的介绍：</p>

<ul>
<li>通过运行生成静态页面，无数据库</li>
<li>使用Markdown标记语言撰写文章</li>
<li>系统管理和文章发布都是Shell命令的方式，Cool</li>
<li>方便的部署到Github Pages</li>
</ul>


<p>有关Octopress的更多信息，可以移步到<a href="http://octopress.org/">官网</a>。</p>

<p>接下来出场的是大名鼎鼎的GitHub，就不做介绍了，因为我们的Blog是要部署为GitHub Pages，所以首先你得有一个GitHub帐号，如果没有，那赶紧<a href="https://github.com">注册</a>一个。</p>

<hr />

<h2>2. 环境准备</h2>

<p>Octopress需要高于1.9.3的Ruby版本，你可以在Shell下执行<code>ruby --version</code>查看当前使用的Ruby版本号，如果已经是1.9.3以上的版本，就可以跳过下面的<em>2.1章节</em>。</p>

<h3>2.1 安装Ruby</h3>

<p>这里用RVM来安装Ruby，因此需要先安装RVM。</p>

<ul>
<li><p>安装 RVM</p>

<p>  <code>curl -L https://get.rvm.io | bash -s stable --ruby</code></p></li>
<li><p>安装 Ruby 1.9.3</p>

<pre><code>  rvm install 1.9.3
  rvm use 1.9.3
  rvm rubygems latest
</code></pre>

<p>如果安装没有错误，现在执行<code>ruby --version</code>输出应该是<code>ruby 1.9.3p392</code>。</p></li>
</ul>


<h3>2.2 安装Octopress</h3>

<pre><code>    git clone git://github.com/imathis/octopress.git octopress
    cd octopress
    gem install bundler
    bundle install
    rake install
</code></pre>

<hr />

<h2>3. 部署Octopress到Github</h2>

<p>GitHub提供了两种页面类别，一种是针对用户和组织的页面，一种是针对项目的页面。本文只介绍如何部署为用户页面。</p>

<p>要使GitHub的用户页面生效，需要建立一个名为<code>username.github.io</code>的Repo（假设你的用户名是：<code>username</code>）.Repo建好后，就可以开始部署Octopress了，接下来在Shell下进到Octopress所在路径。</p>

<pre><code>cd octopress
rake setup_github_pages
</code></pre>

<p>执行上面的命令，按提示输入在GitHub上Repo的URL，形如：git@github.com:username/username.github.io.git。
进一步，执行下面的命令，生成静态页面，和将Blog部署到GitHub。</p>

<pre><code>rake generate
rake deploy
</code></pre>

<p>需要注意的是，部署Blog到GitHub，还需要获得GitHub上你的Repo的访问权限。可以通过如下操作获取访问权限：</p>

<ul>
<li>执行<code>ssh-keygen -t rsa -C "your_email@youremail.com"</code></li>
<li>然后输入并确认密码，在<code>/Users/user/.ssh/</code>目录下会生成id_rsa.pub和id_rsa私钥和公钥文件</li>
<li>打开/Users/user/.ssh/id_rsa.pub公钥文件，复制其中的内容</li>
<li>到GitHub网址你的Repo。进到“Settings”——>&#8221;Depoly Keys&#8221;——>&#8221;Add deploy key&#8221;，将刚才复制的内容粘贴进去，并保存。</li>
</ul>


<p>至此，Blog就成功的部署到了GitHub空间，在浏览器中打开“username.github.io”便可看到你的Blog。</p>

<p>别忘了把Octopress的代码也同步提交到GitHub，下面的命令将所有代码提交到GitHub上相应Repo的source分支。</p>

<pre><code>git add .
git commit -m 'your commit message'
git push origin source
</code></pre>
]]></content>
  </entry>
  
</feed>
